{"ast":null,"code":"var _jsxFileName = \"D:\\\\OneDrive\\\\Desktop\\\\medintel\\\\medintel-frontend\\\\src\\\\components\\\\DiagnosisForm.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DiagnosisForm = () => {\n  _s();\n  const [symptoms, setSymptoms] = useState('');\n  const [diagnosis, setDiagnosis] = useState('');\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const symptomsArray = symptoms.split(',').map(Number);\n    try {\n      const res = await axios.post('http://localhost:5000/diagnose', {\n        symptoms: symptomsArray\n      });\n      setDiagnosis(res.data.diagnosis);\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Diagnose Symptoms\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: symptoms,\n        onChange: e => setSymptoms(e.target.value),\n        placeholder: \"Enter symptoms separated by commas\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Diagnose\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), diagnosis && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Diagnosis: \", diagnosis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(DiagnosisForm, \"bgcmMsvOin2b1r/WNUzzTCMIcDU=\");\n_c = DiagnosisForm;\nexport default DiagnosisForm;\nvar _c;\n$RefreshReg$(_c, \"DiagnosisForm\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","DiagnosisForm","_s","symptoms","setSymptoms","diagnosis","setDiagnosis","handleSubmit","e","preventDefault","symptomsArray","split","map","Number","res","post","data","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","_c","$RefreshReg$"],"sources":["D:/OneDrive/Desktop/medintel/medintel-frontend/src/components/DiagnosisForm.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst DiagnosisForm = () => {\r\n  const [symptoms, setSymptoms] = useState('');\r\n  const [diagnosis, setDiagnosis] = useState('');\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    const symptomsArray = symptoms.split(',').map(Number);\r\n\r\n    try {\r\n      const res = await axios.post('http://localhost:5000/diagnose', { symptoms: symptomsArray });\r\n      setDiagnosis(res.data.diagnosis);\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h2>Diagnose Symptoms</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          value={symptoms}\r\n          onChange={(e) => setSymptoms(e.target.value)}\r\n          placeholder=\"Enter symptoms separated by commas\"\r\n        />\r\n        <button type=\"submit\">Diagnose</button>\r\n      </form>\r\n      {diagnosis && <p>Diagnosis: {diagnosis}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DiagnosisForm;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACQ,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMU,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,MAAMC,aAAa,GAAGP,QAAQ,CAACQ,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAACC,MAAM,CAAC;IAErD,IAAI;MACF,MAAMC,GAAG,GAAG,MAAMhB,KAAK,CAACiB,IAAI,CAAC,gCAAgC,EAAE;QAAEZ,QAAQ,EAAEO;MAAc,CAAC,CAAC;MAC3FJ,YAAY,CAACQ,GAAG,CAACE,IAAI,CAACX,SAAS,CAAC;IAClC,CAAC,CAAC,OAAOY,GAAG,EAAE;MACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;IACpB;EACF,CAAC;EAED,oBACEjB,OAAA;IAAAoB,QAAA,gBACEpB,OAAA;MAAAoB,QAAA,EAAI;IAAiB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC1BxB,OAAA;MAAMyB,QAAQ,EAAElB,YAAa;MAAAa,QAAA,gBAC3BpB,OAAA;QACE0B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAExB,QAAS;QAChByB,QAAQ,EAAGpB,CAAC,IAAKJ,WAAW,CAACI,CAAC,CAACqB,MAAM,CAACF,KAAK,CAAE;QAC7CG,WAAW,EAAC;MAAoC;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjD,CAAC,eACFxB,OAAA;QAAQ0B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACnC,CAAC,EACNnB,SAAS,iBAAIL,OAAA;MAAAoB,QAAA,GAAG,aAAW,EAACf,SAAS;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEV,CAAC;AAACtB,EAAA,CA/BID,aAAa;AAAA8B,EAAA,GAAb9B,aAAa;AAiCnB,eAAeA,aAAa;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}